version: "3.8"

services:
  postgres:
    container_name: cosmo-postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: cosmo
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: cosmo-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    container_name: cosmo-web
    build:
      context: .
      dockerfile: ./docker/web.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api:4000
    depends_on:
      - api

  api:
    container_name: cosmo-api
    build:
      context: .
      dockerfile: ./docker/api.Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/api/node_modules
      - /app/apps/api/dist
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/cosmo
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=development_jwt_secret
      - PORT=4000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres-data:
  redis-data:
