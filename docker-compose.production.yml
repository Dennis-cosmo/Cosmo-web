version: "3.8"

services:
  postgres:
    container_name: cosmo-postgres-prod
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    networks:
      - cosmo-network

  redis:
    container_name: cosmo-redis-prod
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always
    networks:
      - cosmo-network

  api:
    container_name: cosmo-api-prod
    build:
      context: .
      dockerfile: ./docker/api.Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - PORT=4000
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - DEEPSEEK_MODEL=${DEEPSEEK_MODEL}
      - DEFAULT_AI_PROVIDER=${DEFAULT_AI_PROVIDER}
    depends_on:
      - postgres
      - redis
    restart: always
    networks:
      - cosmo-network

networks:
  cosmo-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
