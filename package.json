{
  "name": "cosmo-monorepo",
  "version": "0.1.0",
  "private": true,
  "workspaces": [
    "apps/*",
    "packages/*"
  ],
  "scripts": {
    "env:load": "node scripts/env-loader.js",
    "dev": "node scripts/env-loader.js && turbo run dev --env-mode=loose",
    "dev:web": "cd apps/web && node ../../scripts/env-loader.js && npm run dev",
    "dev:api": "cd apps/api && node ../../scripts/env-loader.js && npm run dev",
    "build": "node scripts/env-loader.js && turbo run build",
    "build:production": "NODE_ENV=production node scripts/env-loader.js && turbo run build",
    "start": "node scripts/env-loader.js && turbo run start",
    "start:production": "NODE_ENV=production node scripts/env-loader.js && turbo run start",
    "lint": "turbo run lint",
    "format": "prettier --write \"**/*.{ts,tsx,md}\"",
    "test": "turbo run test",
    "clean": "turbo run clean && rm -rf node_modules",
    "docker:dev": "chmod +x scripts/docker-dev.sh && ./scripts/docker-dev.sh",
    "docker:dev:build": "docker-compose --env-file .env.docker.dev build",
    "docker:dev:up": "docker-compose --env-file .env.docker.dev up",
    "docker:dev:down": "docker-compose --env-file .env.docker.dev down",
    "docker:dev:logs": "docker-compose --env-file .env.docker.dev logs -f",
    "docker:prod": "chmod +x scripts/docker-prod.sh && ./scripts/docker-prod.sh",
    "docker:prod:build": "docker-compose --env-file .env.docker.prod -f docker-compose.yml -f docker-compose.production.yml build",
    "docker:prod:up": "docker-compose --env-file .env.docker.prod -f docker-compose.yml -f docker-compose.production.yml up -d",
    "docker:prod:down": "docker-compose --env-file .env.docker.prod -f docker-compose.yml -f docker-compose.production.yml down",
    "docker:prod:logs": "docker-compose --env-file .env.docker.prod -f docker-compose.yml -f docker-compose.production.yml logs -f",
    "docker:stop": "chmod +x scripts/docker-stop.sh && ./scripts/docker-stop.sh",
    "docker:clean": "docker system prune -af && docker volume prune -f",
    "docker:reset": "npm run docker:stop && npm run docker:clean",
    "hetzner:deploy": "chmod +x scripts/deploy-hetzner.sh && ./scripts/deploy-hetzner.sh",
    "hetzner:validate": "chmod +x scripts/validate-hetzner.sh && ./scripts/validate-hetzner.sh",
    "hetzner:setup": "chmod +x scripts/setup-hetzner-server.sh && ./scripts/setup-hetzner-server.sh",
    "hetzner:logs": "ssh -i ~/.ssh/id_rsa root@$HETZNER_SERVER_IP 'cd /app && docker-compose -f docker-compose.hetzner.yml logs -f'",
    "hetzner:status": "ssh -i ~/.ssh/id_rsa root@$HETZNER_SERVER_IP 'cd /app && docker-compose -f docker-compose.hetzner.yml ps'",
    "hetzner:restart": "ssh -i ~/.ssh/id_rsa root@$HETZNER_SERVER_IP 'cd /app && docker-compose -f docker-compose.hetzner.yml restart'",
    "hetzner:backup": "ssh -i ~/.ssh/id_rsa root@$HETZNER_SERVER_IP '/app/scripts/backup.sh'",
    "gdpr:generate-secrets": "echo 'JWT_SECRET:' && openssl rand -base64 64 && echo 'NEXTAUTH_SECRET:' && openssl rand -base64 64",
    "gdpr:validate": "node scripts/gdpr-validator.js"
  },
  "devDependencies": {
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-decorators": "^7.27.1",
    "@babel/plugin-transform-typescript": "^7.27.1",
    "@types/bcrypt": "^5.0.2",
    "bcrypt": "^5.1.1",
    "eslint": "^8.57.0",
    "prettier": "^3.2.5",
    "turbo": "^2.1.7"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "packageManager": "yarn@1.22.19",
  "dependencies": {
    "axios": "^1.9.0",
    "openai": "^3.3.0",
    "recharts": "^2.15.3"
  }
}
